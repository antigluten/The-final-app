// Generated by view binder compiler. Do not edit!
package com.example.theapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.theapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itemContext;

  @NonNull
  public final TextView itemTranslation;

  @NonNull
  public final TextView itemWordToLearn;

  private ItemTestBinding(@NonNull LinearLayout rootView, @NonNull TextView itemContext,
      @NonNull TextView itemTranslation, @NonNull TextView itemWordToLearn) {
    this.rootView = rootView;
    this.itemContext = itemContext;
    this.itemTranslation = itemTranslation;
    this.itemWordToLearn = itemWordToLearn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_context;
      TextView itemContext = rootView.findViewById(id);
      if (itemContext == null) {
        break missingId;
      }

      id = R.id.item_translation;
      TextView itemTranslation = rootView.findViewById(id);
      if (itemTranslation == null) {
        break missingId;
      }

      id = R.id.item_wordToLearn;
      TextView itemWordToLearn = rootView.findViewById(id);
      if (itemWordToLearn == null) {
        break missingId;
      }

      return new ItemTestBinding((LinearLayout) rootView, itemContext, itemTranslation,
          itemWordToLearn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
